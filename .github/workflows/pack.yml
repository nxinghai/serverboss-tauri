name: Release
on:
  push:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-11, windows-latest]  #ubuntu-latest,macos-latest,windows-latest
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: ubuntu get jre
        if: ${{ startsWith(matrix.platform,'ubuntu') }}
        run: mkdir src-tauri/jre && tar zxvf jres/linux-jre.tar.gz -C src-tauri/jre

      - name: macos get jre
        if: ${{ startsWith(matrix.platform,'macos') }}
        run: mkdir src-tauri/jre && tar zxvf jres/macos-jre.tar.gz -C src-tauri/jre

      - name: windows get jre
        if: ${{ startsWith(matrix.platform,'windows') }}
        run: mkdir src-tauri/jre && tar zxvf jres/windows-jre.tar.gz -C src-tauri/jre

      - name: Install dependencies (ubuntu only)
        if: ${{ startsWith(matrix.platform,'ubuntu') }}
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install # Change this to npm, yarn or pnpm.

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LC_ALL: C
          LD_LIBRARY_PATH: /home/runner/work/serverboss-tauri/serverboss-tauri/src-tauri/jre/lib/amd64/server:/home/runner/work/serverboss-tauri/serverboss-tauri/src-tauri/jre/lib/amd64
        with:
          tagName: v__VERSION__ # This only works if your workflow triggers on new tags.
          releaseName: v__VERSION__ # tauri-action replaces \_\_VERSION\_\_ with the app version.

      - name: run appimage.sh
        if: ${{ failure() }}
        run: export LD_LIBRARY_PATH=/home/runner/work/serverboss-tauri/serverboss-tauri/src-tauri/jre/lib/amd64/server:/home/runner/work/serverboss-tauri/serverboss-tauri/src-tauri/jre/lib/amd64 && cd /home/runner/work/serverboss-tauri/serverboss-tauri/src-tauri/target/release/bundle/appimage && rm -rf *.AppDir && ./build_appimage.sh
